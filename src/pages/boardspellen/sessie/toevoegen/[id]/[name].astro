---
export const prerender = false;

import Layout from "../../../../../layouts/layout.astro";

import {
  db,
  Board_Games,
  Players,
  Game_Sessions,
  Session_Players,
  isNull,
  count,
  eq,
} from "astro:db";

const { id: GameID } = Astro.params;

const allPlayers = await db.select().from(Players).orderBy(Players.name);

const gameData = await db
  .select({
    ...Board_Games,
    sessionCount: count(Game_Sessions.id).as("session_count"),
  })
  .from(Board_Games)
  .leftJoin(Game_Sessions, eq(Board_Games.id, Game_Sessions.board_games_id))
  .where(isNull(Board_Games.deleted_at))
  .where(eq(Board_Games.id, GameID))
  .orderBy(Board_Games.id)
  .groupBy(Board_Games.name)
  .limit(1);

if (Astro.request.method === "POST") {
  const formData = await Astro.request.formData();

  const formBody = {
    players: formData.getAll("players"),
    winner_player_id: allPlayers.find(
      (player) => formData.get("winner") == player.name
    ).id,
    points: formData.get("points"),
    date: new Date(formData.get("date")),
  };

  const gameSession = await db
    .insert(Game_Sessions)
    .values({
      board_games_id: GameID,
      winner_player_id: formBody.winner_player_id,
      points: formBody.points,
      play_date: formBody.date,
    })
    .returning();

  if (gameSession[0].id) {
    await db
      .update(Board_Games)
      .set({ played: true })
      .where(eq(Board_Games.id, GameID));

    for (let i = 0; i < formBody.players.length; i++) {
      await db.insert(Session_Players).values({
        players_id: parseInt(formBody.players[i]),
        game_sessions_id: gameSession[0].id,
      });
    }
  }
}
---

<Layout title="Board Games!" discription="Zijn echt heel leuk">
  <section class="container-fluid">
    <h1>Sessie toevoegen voor {gameData[0].name}</h1>

    <form method="POST" id="game-form">
      <fieldset>
        <label for="date">
          Datum
          <input type="date" name="date" id="date" aria-label="date" />
        </label>
        <label for="players">
          Spelers
          <select
            aria-label="Selecteer de spelers..."
            multiple
            name="players"
            id="players"
          >
            <option disabled>Selecteer de spelers...</option>
            {
              allPlayers.map(({ id, name }) => (
                <option value={id}>{name}</option>
              ))
            }
          </select>
        </label>
        <label for="winner">
          Winnaar:
          <select name="winner" aria-label="Selecteer de winnaar..." required>
            {
              allPlayers.map((player) => (
                <option value={player.name}>{player.name}</option>
              ))
            }
          </select>
        </label>
        <label for="points">
          Punten
          <input
            type="number"
            name="points"
            placeholder="Punten"
            aria-label="Punten"
          />
        </label>
      </fieldset>
      <input type="submit" value="Opslaan" />
    </form>
  </section>
</Layout>
