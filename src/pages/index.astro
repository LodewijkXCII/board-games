---
import Layout from "../layouts/layout.astro";

import { db, isNull, count, Game_Sessions, Board_Games, eq } from "astro:db";

const boardgames = await db
  .select({
    ...Board_Games,
    sessionCount: count(Game_Sessions.id).as("session_count"),
  })
  .from(Board_Games)
  .leftJoin(Game_Sessions, eq(Board_Games.id, Game_Sessions.board_games_id))
  .where(isNull(Board_Games.deleted_at))
  .groupBy(Board_Games.id)
  .orderBy(Board_Games.name);
---

<Layout title="Board Games!" discription="Zijn echt heel leuk">
  <section class="container-fluid">
    <h3>Filters:</h3>
    <div class="filter grid">
      <label>
        <input name="terms" type="checkbox" role="switch" id="playedFilter" />
        <strong>Niet gespeeld</strong>
      </label>
      <input
        type="search"
        name="search"
        placeholder="Zoeken"
        aria-label="Search"
        id="search"
      />
    </div>
    <hr />
    <h3>Spel overzicht</h3>
    <p>Totaal aantal spellen: {boardgames.length}</p>
    <div class="board-game-list">
      {
        boardgames ? (
          // boardgames.map((game) => (
          //   <article
          //     class="board-game-item"
          //     data-played={game.played ? "true" : "false"}
          //     data-name={game.name}
          //   >
          //     <header>
          //       <h4>{game.name}</h4>
          //     </header>
          //     <p>
          //       Voor {game.minplayers} tot {game.maxplayers} spelers. (Beste
          //       voor <strong>{game.bggbestplayers}</strong> spelers)
          //     </p>
          //     <p>
          //       {game.sessionCount} keer gespeeld{" "}
          //       {game.sessionCount > 0 && (
          //         <a href={`sessie?game=${game.id}`}>bekijk sessies</a>
          //       )}
          //     </p>

          //     <a
          //       href={`sessie/toevoegen/${game.id}/${game.name
          //         .replace(/ /g, "-")
          //         .replace(/[^\w-]+/g, "")
          //         .toLowerCase()}`}
          //     >
          //       Sessie toevoegen
          //     </a>
          //     <footer class:list={[{ gespeeld: game.played }]}>
          //       {game.played ? "Gepeeld" : "Niet gespeeld"}
          //     </footer>
          //   </article>
          // ))
          console.log(boardgames)
        ) : (
          <h1>Er is iets mis gegaan</h1>
        )
      }
    </div>
  </section>
</Layout>

<script>
  const toggleSwitch = document.getElementById("playedFilter");
  const gameList = document.querySelectorAll(".board-game-item");
  const searchBox = document.getElementById("search");

  toggleSwitch.addEventListener("click", () => {
    if (toggleSwitch.checked) {
      gameList.forEach((game) => {
        if (game.dataset.played === "true") {
          game.classList.add("visualy-hidden");
        }
      });
    } else {
      gameList.forEach((game) => {
        if (game.dataset.played === "true") {
          game.classList.remove("visualy-hidden");
        }
      });
    }
  });

  searchBox.addEventListener("input", (e) => {
    const searchValue = e.target.value.toLowerCase();

    [...gameList].forEach((game) => {
      const gameName = game.dataset.name.toLowerCase();

      if (gameName.includes(searchValue)) {
        game.classList.remove("visualy-hidden");
        return;
      } else {
        game.classList.add("visualy-hidden");
      }
    });
  });
</script>
